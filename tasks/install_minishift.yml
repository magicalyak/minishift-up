- name: Get the Mac asset
  include_tasks: "{{ role_path }}/tasks/get_ms_darwin_asset.yml"
  with_items: "{{ assets.json }}"
  when: assets is defined and ansible_os_family == 'Darwin'

- name: Get the Linux asset
  include_tasks: "{{ role_path }}/tasks/get_ms_linux_asset.yml"
  with_items: "{{ assets.json }}"
  when: assets is defined and ansible_os_family != 'Darwin' and ansible_os_family != 'Windows'

- name: Should have an asset_name
  assert:
    that: asset_name is defined

- name: Create a temp dir
  tempfile:
    state: directory
    suffix: build
  register: temp_output
  changed_when: false

- name: Unarchive the archive
  unarchive:
    src: "{{ asset_url }}"
    dest: "{{ temp_output.path }}"
    copy: no

- name: Get the tgz dir name
  shell: 'set -o pipefail && true | echo {{ asset_name }} | sed "s/.zip$//" | sed "s/.tgz$//"'
  args:
    executable: /bin/bash
  register: asset_dir
  changed_when: false

- name: Move the executable to the requested directory
  copy:
    src: "{{ temp_output.path }}/{{ asset_dir.stdout }}/minishift"
    dest: "{{ minishift_dest }}/minishift"
    remote_src: yes
    mode: 0775
  become: yes

- name: Set HyperKit driver if set
  command: "minishift config set vm-driver hyperkit"
  when:
    - use_hyperkit

- name: Remove the temp directory
  file:
    path: "{{ temp_output.path }}"
    state: absent